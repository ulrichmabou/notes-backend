{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","put","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","useEffect","noteService","initialNotes","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kOAoBe,EAfA,WAEb,OADgBA,IAAMC,IAJR,cAKCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KATR,aASsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAdF,aAcE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCJ5BK,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCMjCK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,yBAAKJ,UAAU,SACVI,ICHPC,EAAS,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,uGA6FSC,EAxFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMVC,EAAcJ,EAChBJ,EACAA,EAAMS,QAAO,SAAAzB,GAAI,OAAIA,EAAKG,aAM9BuB,qBAAU,WACRC,IAEGnC,MAAK,SAAAoC,GACJX,EAASW,QAEZ,IAsCH,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcpB,QAASc,IACvB,6BACE,4BAAQhB,QAAS,kBAAMe,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGI,EAAYK,KAAI,SAAC7B,EAAM8B,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACL9B,KAAMA,EACNC,iBAAkB,kBAlCD,SAAAJ,GACzB,IAAMG,EAAOgB,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAEpC,KAAOA,KAChCqC,EAAW,2BAAQlC,GAAR,IAAcG,WAAYH,EAAKG,YAEhDwB,EACU9B,EAAIqC,GACX1C,MAAK,SAAA2C,GACJlB,EAASD,EAAMa,KAAI,SAAA7B,GAAI,OAAIA,EAAKH,KAAOA,EAAKG,EAAOmC,SAEpDC,OAAM,SAAAC,GACLd,EAAgB,SAAD,OACJvB,EAAKK,QADD,sCAGfiC,YAAW,WACTf,EAAgB,QACf,KACHN,EAASD,EAAMS,QAAO,SAAAQ,GAAC,OAAIA,EAAEpC,KAAOA,SAkBR0C,CAAmBvC,EAAKH,WAItD,0BAAM2C,SAtDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBtC,QAASa,EACT0B,MAAM,IAAIC,MAAOC,cACjB3C,UAAW4C,KAAKC,SAAW,IAG7BrB,EACUgB,GACPnD,MAAK,SAAA2C,GACJlB,EAASD,EAAMiC,OAAOd,IACtBhB,EAAW,SA2CX,2BACE+B,MAAOhC,EACPiC,SArEmB,SAACV,GACxBtB,EAAWsB,EAAMW,OAAOF,UAsEtB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MCjGNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.eaf11842.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/notes'\nconst baseUrl = '/api/notes'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important ? 'make not important' : 'make important'\n\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\n\n// Footer component with in-line styling\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n    const handleNoteChange = (event) => {\n      setNewNote(event.target.value)\n    }\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>      \n      <ul>\n        {notesToShow.map((note, i) => \n          <Note \n            key={i} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer /> \n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}